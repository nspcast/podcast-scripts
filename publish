#!/bin/bash
#
######################################################################
############ Config - Change this to match your show #################
######################################################################
#
# Information about your podcast
SHOW="Podcast Name"        # Name of podcast
WEBSITE="https://example/com"    # Website URL
PREFIX="abc"            # Show's Prefix
#
# Local directories
RENDER_PATH="/path/to/where/daw/puts/file"    # Folder where rendered/exported file from your DAW is
TMP_PATH="/temporary/path/"                  # Where you temporary working files are
EPISODE_ROOT="/path/to/podcast/files"        # Root of where all of your episode files are
TEMPLATE_PATH="/path/to/template/files/" # Folder where you have stub files for your shownotes"
ART="/path/to/podcast/artwork/"            # Folder where artwork is
#
# Commands
TEXT_EDITOR="open -a TextEdit"
BROWSER="open -a Safari"
WHISPER_MODEL="~/podcast/models/ggml-large-v3-turbo.bin"
#
# URLs you need opened
URL1="$WEBSITE/wp-admin/edit.php"
URL2="https://your-hosting-provider/posts/new"
URL3="https://www.patreon.com/posts/new"
URL4="$WEBSITE/wp-admin/post-new.php?post_type=pretty-link"
#
# Archives
ARCHIVE="true"            # Do you have a local archive folder?
ARCHIVE_DIR="/path/to/archives/" # Path to NAS
#
# wp-cli
WP_CP="server:/home/user/"
WP_SSH="server:/var/www/example.com/html/"
WP_SRC_PATH="/home/user"
#
######################################################################
############ Below is the actual script, edit as needed ##############
######################################################################
#
# Set episode number
read -p "What is the episode number? " NUM
LONG_NUM=`printf %03d $NUM`
SHORT="$PREFIX$LONG_NUM"
TMP="$TMP_PATH/$SHORT"
EPISODE_PATH="$EPISODE_ROOT/$LONG_NUM"
YEAR=$(date +'%Y')
#
# Clean up old files
let LAST="NUM-1"
LAST2=`printf %03d $LAST`
if [ -f "$RENDER_PATH/$PREFIX$LAST2.wav" ]; then
    rm "$RENDER_PATH/$PREFIX$LAST2.wav" ;
fi
if [ -d "$TMP_PATH/$PREFIX$LAST2" ]; then
    rm -R "$TMP_PATH/$PREFIX$LAST2" ;
fi
#
# Make directories and change directory to working directory
if [ ! -d "$TMP" ]; then
    mkdir -p "$TMP"
fi
if [ ! -d "$EPISODE_PATH" ]; then
    mkdir -p "$EPISODE_PATH"
fi
cd $TMP
#
# Set episode title
if [ -f "title.txt" ]; then
	source title.txt ;
	echo "$NUM $TITLE" ;
else 
	read -p "What is the episode title? " TITLE;
fi
#
# Silence truncation and encode MP3 in temp file
ffmpeg -i $RENDER_PATH/$SHORT.wav -c libmp3lame -b:a 96k -ar 44100 -ac 1 -af silenceremove=stop_periods=-1:stop_duration=1:start_silence=0.75:stop_threshold=-50dB tmp.mp3
#
# Manipulate images
magick $ART/thumbnail.png -font Ubuntu -pointsize 350 -draw "gravity center fill white text 0,0 '$NUM' " $SHORT-thumbnail.jpg
magick $THUMB -resize 300x300 cover.jpg
cp $SHORT-thumbnail.jpg $EPISODE_PATH/
#
# Add tags to MP3 with final name
ffmpeg -i tmp.mp3 -i cover.jpg -map 0:0 -map 1:0 -c copy -id3v2_version 3 -metadata:s:v title="Album cover" -metadata:s:v comment="Cover (Front)" -metadata title="$NUM $TITLE" -metadata artist="$SHOW" -metadata album_artist="$SHOW" -metadata date=$YEAR -metadata track=$NUM $EPISODE_PATH/$MP3
#
# Generate wav file for Whisper
ffmpeg -i tmp.mp3 -acodec pcm_s16le -ar 16000 whisper.wav
#
# Show notes
if [ ! -f $SHORT.md ]; then
    echo "Show notes don't exist. Please create them." ;
    touch $SHORT.md ;
    cat $TEMPLATE/links.md >> $SHORT.md ;
    cat $TEMPLATE/end.md >> $SHORT.md ;
    $TEXT_EDITOR $SHORT.md ;
fi
read -p "Are you done with the show notes? "
#
# Finish shownotes
markdown $SHORT.md >> $EPISODE_PATH/$SHORT.html
#
# Copy HTML to the webserver and use WP CLI to create the draft post
scp $EPISODE_PATH/$SHORT.html $WP_CP
WP_TITLE="$NUM $TITLE"
wp --ssh=$WP_SSH post create $WP_SRC_PATH/$HTML --post_title="$WP_TITLE" --post_status="draft" --post_category="episodes"
#
# OpenbBrowser tabs to post episode
$BROWSER $URL1 &
$BROWSER $URL2 &
$BROWSER $URL3 &
$BROWSER $URL4 &
#
# Copy file to local NAS or file server
rsync -azzv $EPISODE_ROOT $ARCHIVE_DIR ;
#
# Transcript generation - Uncomment the export line if you have a Mac with Apple Silicon
# export GGML_METAL_PATH_RESOURCES="$(brew --prefix whisper-cpp)/share/whisper-cpp" # For Mac OS
whisper-cpp -m $WHISPER_MODEL -l en -osrt --file whisper.wav --output-file $EPISODE_PATH/$SHORT
#
echo "All done!"
